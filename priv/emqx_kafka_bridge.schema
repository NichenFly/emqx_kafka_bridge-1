%%-*- mode: erlang -*-

{mapping, "kafka.host", "emqx_kafka_bridge.broker", [
  {default, "192.168.205.116"},
  {datatype, string}
]}.

{mapping, "kafka.port", "emqx_kafka_bridge.broker", [
  {default, "9092"},
  {datatype, string}
]}.

{mapping, "kafka.partitionstrategy", "emqx_kafka_bridge.broker", [
  {default, "strict_round_robin"},
  {datatype, string}
]}.

{mapping, "kafka.partitionworkers", "emqx_kafka_bridge.broker", [
  {default, 8},
  {datatype, integer}
]}.

{mapping, "kafka.payloadtopic", "emqx_kafka_bridge.broker", [
  {default, "Processing"},
  {datatype, string}
]}.

{mapping, "kafka.publishtopic", "emq_kafka_bridge.broker", [
  {default, "Publish"},
  {datatype, string}
]}.

{mapping, "kafka.connectedtopic", "emq_kafka_bridge.broker", [
  {default, "Connected"},
  {datatype, string}
]}.

{mapping, "kafka.disconnectedtopic", "emq_kafka_bridge.broker", [
  {default, "Disconnected"},
  {datatype, string}
]}.

{mapping, "kafka.subscribetopic", "emq_kafka_bridge.broker", [
  {default, "Subscribe"},
  {datatype, string}
]}.

{mapping, "kafka.unsubscribetopic", "emq_kafka_bridge.broker", [
  {default, "Unsubscribe"},
  {datatype, string}
]}.

{mapping, "kafka.deliveredtopic", "emq_kafka_bridge.broker", [
  {default, "Delivered"},
  {datatype, string}
]}.

{translation, "emqx_kafka_bridge.broker", fun(Conf) ->
  KafkaHost = cuttlefish:conf_get("kafka.host", Conf),
  KafkaPort = cuttlefish:conf_get("kafka.port", Conf),
  KafkaPartitionStrategy = cuttlefish:conf_get("kafka.partitionstrategy", Conf),
  KafkaPartitionWorkers = cuttlefish:conf_get("kafka.partitionworkers", Conf),
  KafkaPayloadTopic = cuttlefish:conf_get("kafka.payloadtopic", Conf),
  KafkaPublishTopic = cuttlefish:conf_get("kafka.publishtopic", Conf),
  KafkaConnectedTopic = cuttlefish:conf_get("kafka.connectedtopic", Conf),
  KafkaDisconnectedTopic = cuttlefish:conf_get("kafka.disconnectedtopic", Conf),
  KafkaSubscribeTopic = cuttlefish:conf_get("kafka.subscribetopic", Conf),
  KafkaUnsubscribeTopic = cuttlefish:conf_get("kafka.unsubscribetopic", Conf),
  KafkaDeliveredTopic = cuttlefish:conf_get("kafka.deliveredtopic", Conf),
  [{host, KafkaHost}, {port, KafkaPort}, {partitionstrategy, KafkaPartitionStrategy}, {partitionworkers, KafkaPartitionWorkers}, {payloadtopic, KafkaPayloadTopic}, {publishtopic, KafkaPublishTopic}, {connectedtopic, KafkaConnectedTopic}, {disconnectedtopic, KafkaDisconnectedTopic}, {subscribetopic, KafkaSubscribeTopic}, {unsubscribetopic, KafkaUnsubscribeTopic}, {deliveredtopic, KafkaDeliveredTopic}]
  end}.